name: 'Categories V2'
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v2/categories
    metadata:
      groupName: 'Categories V2'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get a list of all categories.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
             "data": [
               {
                 "id": 1,
                 "name": "Frozen",
                 "display_name": "Frozen Fish",
                 "description": "Fish that live in freshwater environments"
               }
             ]
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v2/categories/{category_id}'
    metadata:
      groupName: 'Categories V2'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get a specific category.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      category_id:
        name: category_id
        description: 'The ID of the category.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      category:
        name: category
        description: 'The ID of the category.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      category_id: 1
      category: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
             "data": {
               "id": 1,
               "name": "Frozen",
               "display_name": "Frozen Fish",
               "description": "Fish that live in freshwater environments"
             }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: '{"message": "Category not found"}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v2/categories
    metadata:
      groupName: 'Categories V2'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a new category.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The unique identifier of the category (lowercase, no spaces).'
        required: true
        example: freshwater
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      display_name:
        name: display_name
        description: 'The human-readable name of the category.'
        required: true
        example: 'Freshwater Fish'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      description:
        name: description
        description: 'A detailed description of the category and its characteristics.'
        required: true
        example: 'Fish that live in freshwater environments such as rivers, lakes, and ponds.'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
    cleanBodyParameters:
      name: freshwater
      display_name: 'Freshwater Fish'
      description: 'Fish that live in freshwater environments such as rivers, lakes, and ponds.'
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
             "data": {
               "id": 1,
               "name": "Frozen",
               "display_name": "Frozen Fish",
               "description": "Fish that live in freshwater environments"
             }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: '{"message": "The given data was invalid.", "errors": {"name": ["The name field is required."]}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/v2/categories/{category_id}'
    metadata:
      groupName: 'Categories V2'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update an existing category.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      category_id:
        name: category_id
        description: 'The ID of the category.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      category:
        name: category
        description: 'The ID of the category.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      category_id: 1
      category: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'El campo value no debe ser mayor que 255 caracteres.'
        required: true
        example: b
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      display_name:
        name: display_name
        description: 'The human-readable name of the category.'
        required: true
        example: 'Freshwater Fish'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      description:
        name: description
        description: 'A detailed description of the category and its characteristics.'
        required: true
        example: 'Fish that live in freshwater environments such as rivers, lakes, and ponds.'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
    cleanBodyParameters:
      name: b
      display_name: 'Freshwater Fish'
      description: 'Fish that live in freshwater environments such as rivers, lakes, and ponds.'
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
             "data": {
               "id": 1,
               "name": "Frozen",
               "display_name": "Updated Frozen Fish",
               "description": "Updated description of freshwater fish and their habitats"
             }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: '{"message": "Category not found"}'
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: '{"message": "The given data was invalid.", "errors": {"display_name": ["The display name field is required."]}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v2/categories/{category_id}'
    metadata:
      groupName: 'Categories V2'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete a specific category.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      category_id:
        name: category_id
        description: 'The ID of the category.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      category:
        name: category
        description: 'The ID of the category.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      category_id: 1
      category: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 204
        content: '{"message": "Category deleted successfully"}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
